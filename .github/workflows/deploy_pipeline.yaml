name: Deployment Pipeline
on:
  workflow_dispatch:
  push: 
    branches:
      - main
    paths:
      - output/model.joblib
jobs:
  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    
    steps:
      
      - name: Check out repo
        uses: actions/checkout@v3
  
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: jcsimmons/ml-app
  
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ml-app:latest
          build-args: |
            API_KEY=${{ secrets.API_KEY }}

  render:
    needs: docker
    name: Redeploy Render API
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        run: |
          response_code=$(curl --request POST \
               --url https://api.render.com/v1/services/${{secrets.RENDER_SERVICE_ID}}/deploys \
               --header 'accept: application/json' \
               --header 'authorization: Bearer ${{ secrets.RENDER_API_KEY}}' \
               --header 'content-type: application/json' \
               --data '
          {
            "clearCache": "do_not_clear"
          }' \
               --write-out "%{http_code}" \
               --silent)
          
          echo $response_code

  api-check:
    needs: render
    name: Call API
    runs-on: ubuntu-latest
    steps:

      - name: checkout
        uses: actions/checkout@v2

      - name: wait
        run: sleep 20s
        
      - name: call-api
        id: call
        run: |
          response=$(curl -H "Content-Type: application/json" \
                          -H "Authorization: Bearer ${{ secrets.API_KEY}}" \
                          --data @test_sample.json \
                          -s -w "\n%{http_code}" \
                          https://ml-api-imwi.onrender.com)
          
          status_code=$(echo "$response" | tail -n 1)
          
          echo "status_code=$status_code" >> $GITHUB_OUTPUT
          echo "$response"  # Print response body for debugging purposes

      - name: check API response
        if: ${{ steps.call.outputs.status_code != 200 }}
        run: |
          echo "Failed with code ${{ steps.call.outputs.status_code}} "
          exit 1

      - name: if-success
        run: echo "success!"
